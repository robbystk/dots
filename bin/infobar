#! /bin/bash

# fetch and print info to be displayed in a bar

set -e

function datetime {
    date '+%F %T'
}

function battery {
    statfile='/sys/class/power_supply/BAT0/status'
    capfile='/sys/class/power_supply/BAT0/capacity'

    label='bat'
    if [[ -e $capfile && -e $statfile ]]
    then
        bat_cap=$(cat /sys/class/power_supply/BAT0/capacity)
        bat_stat=$(cat /sys/class/power_supply/BAT0/status)


        if [[ $bat_stat == 'Charging' ]]
        then
            echo "${label}: +${bat_cap}% "
        else
            echo "${label}: -${bat_cap}% "
        fi
    fi
}

function volume {
    echo "vol: $(
        amixer sget Master |sed -n 's/^.*\[\([0-9]\+\)%\].*$/\1/p' |uniq
    )"
}

function pcpu {
    echo "cpu: $(
        ps -eo pcpu |awk 'BEGIN {sum=0.0f} {sum+=$1} END {printf "%.0f", sum}'
    )"
}

function memory {
    awk '/MemTotal/{memtotal=$2};
        /MemFree/{memfree=$2};
        /Buffers/{buffer=$2};
        /^Cached/{cache=$2};
        /SwapTotal/{swaptotal=$2};
        /SwapFree/{swapfree=$2};
        END {printf "mem: %.0f%% swp: %.0f%%",
            100 * (memtotal - memfree - buffer - cache) / memtotal,
            100 * (swaptotal - swapfree) / swapfree}'\
        /proc/meminfo
}

function network {
    read lo int1 int2 <<< `ip link |sed -n 's/^[0-9]: \(.*\):.*$/\1/p' |paste -sd " "`

    if iw dev "$int1" info >/dev/null 2>&1
    then
        wifi=$int1
        eth=$int2
    else
        wifi=$int2
        eth=$int1
    fi

    estat=$(ip link show $eth |grep 'state UP' >/dev/null && echo '-')
    wstat=$(ip link show $wifi |grep 'state UP' >/dev/null && echo 'w')

    cstat=$(ping -c 1 comcast.net >/dev/null 2>&1 && echo 'O' || echo 'X')

    echo "net: $estat$wstat$cstat"
}

function disks {
    # show only `/dev/sda*`, and exclude partitions mounted in `/mnt/`
    # change `$5` to `$3` to see absolute numbers
    # also `-h` is not necessary for percents but whatever
    df -h |awk '/dev\/sda/&&!/mnt/{printf "%s: %d%% ", $6, $5}'
}

function updates {
    echo "pkg: $(
        checkupdates |wc -l
    )"
}

while :
do
    buf=""
    buf="${buf} $(battery)"
    # buf="${buf} $(updates)"
    buf="${buf} $(volume)%"
    buf="${buf} $(pcpu)%"
    buf="${buf} $(memory)"
    buf="${buf} $(disks)"
    buf="${buf} $(network)"
    buf="${buf} $(datetime)"

    echo $buf

    sleep 1
done
